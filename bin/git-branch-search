#!/bin/bash

# Search for a git branch by substring.
#
# Prints out the first branch that matches the substring.
# If there is more than one match, the one with the most recent commit is used.
# With no args, prints the current branch.
# With '-' as the only arg, prints the branch that was checked out before the current one.
# With '-a' as the only arg, prints branches in order of committer date.
#
# @param substring (optional) substring in a branch name

readonly SUBSTRING="$1"
readonly GIT_REV_PARSE='git rev-parse'
readonly LAST_REV='@{-1}'
readonly BRANCHES=$(git for-each-ref --sort=-committerdate refs/heads/ | awk '{ print $3 }' | sed 's|refs/heads/||')

# show the last branch when '-' is passed
if [[ ${SUBSTRING} == '-' ]]; then
    ${GIT_REV_PARSE} --verify ${LAST_REV} > /dev/null 2>&1 && \
    ${GIT_REV_PARSE} --abbrev-ref=strict ${LAST_REV}
elif [[ ${SUBSTRING} == '-a' ]]; then
    # print list of branches
    echo "${BRANCHES}"
elif [[ -n ${SUBSTRING} ]]; then
    # look for the substring
    readonly BRANCH=$(echo "${BRANCHES}" | grep --color=never --ignore-case --regexp="${SUBSTRING}" | head -1)

    if [[ -z ${BRANCH} ]]; then
        exit 1
    else
        echo ${BRANCH}
    fi
else
    # else print the current branch
    ${GIT_REV_PARSE} --abbrev-ref HEAD
fi
