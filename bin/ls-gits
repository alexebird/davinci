#!/usr/bin/env bash
set -euo pipefail

. "${DAVINCI_CLONE}/sh/01-colors.sh"

div="----------------------------------------------------------------------------"
first='true'

for repo in $(find "${DAVINCI_HOME}" -type d -name .git); do
  cd "${repo%.git}"

  main_branch="$(git branch | grep '*' | grep -P 'dev|develop|master' || true)"
  stash="$(git stash list)"
  status="$(git status --porcelain)"

  if [[ -z "${main_branch}" ]] || [[ -n "${stash}" ]] || [[ -n "${status}" ]]; then
    header="== $(basename "${PWD}") (${PWD}) "

    while [[ "${#header}" -le 80 ]]; do
      header="${header}="
    done

    if [[ "${first}" == "false" ]]; then
      echo
      echo
      echo
    fi

    echo -e "\e[1;33m${header}\e[0m"

    echo -e "\e[1;33m== Branch: $(git rev-parse --abbrev-ref HEAD)\e[0m"

    if [[ -n "${stash}" ]] ; then
      echo -e "\e[1;33m== Stash\e[0m"
      echo -e "\e[1;33m==\e[0m  |"
      echo -e "\e[1;33m==\e[0m  |${div}"
      echo -e "${stash}" | sed -e"s/^/\o033[1;33m==\o033[0m  | /"
      echo -e "\e[1;33m==\e[0m  \`${div}"

      if [[ -n "${status}" ]] ; then
        echo -e "\e[1;33m==\e[0m"
      fi
    fi

    if [[ -n "${status}" ]] ; then
      echo -e "\e[1;33m== Status\e[0m"
      echo -e "\e[1;33m==\e[0m  |"
      echo -e "\e[1;33m==\e[0m  |${div}"
      git status | sed -e"s/^/\o033[1;33m==\o033[0m  | /"
      echo -e "\e[1;33m==\e[0m  \`${div}"
    fi

    first='false'
  fi
done
